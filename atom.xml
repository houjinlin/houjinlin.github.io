<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Don&#39;t Worry</title>
  
  <subtitle>享受孤独,但不喜欢孤单。</subtitle>
  <link href="http://hjl.cool/atom.xml" rel="self"/>
  
  <link href="http://hjl.cool/"/>
  <updated>2021-01-26T04:36:28.080Z</updated>
  <id>http://hjl.cool/</id>
  
  <author>
    <name>Don&#39;t Worry</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>豆瓣电影Top250数据分析</title>
    <link href="http://hjl.cool/2021/01/26/%E8%B1%86%E7%93%A3%E7%94%B5%E5%BD%B1Top250%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    <id>http://hjl.cool/2021/01/26/%E8%B1%86%E7%93%A3%E7%94%B5%E5%BD%B1Top250%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/</id>
    <published>2021-01-26T03:42:36.000Z</published>
    <updated>2021-01-26T04:36:28.080Z</updated>
    
    <content type="html"><![CDATA[<p>##技术概括及主要代码</p><p>###技术步骤<br>一、通过 urllib.request 模块进行网页的爬取。二、bs4中的BeautifulSoup 进行网页的解析。<br>三、通过re正则模块网页中相应的内容并提取。四、通过xlwt模块先将数据存储到excel表中。<br>五、通过sqlite3设计创建一张表并将数据存入。六、找一个网页模板并修改<br>七、从数据库中读数据并显示在网页上，表格涉及使用到BootStrap进行了简单的渲染<br>八、数据分析使用到Echarts框架。九、网页展示用flask框架进行展示<br>十、词云的使用</p><h3 id="spider-amp-amp-sqlite"><a href="#spider-amp-amp-sqlite" class="headerlink" title="spider&amp;&amp;sqlite"></a>spider&amp;&amp;sqlite</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line">import urllib.request</span><br><span class="line">from  bs4 import  BeautifulSoup</span><br><span class="line">import re</span><br><span class="line">import xlwt</span><br><span class="line">import sqlite3</span><br><span class="line">def main():</span><br><span class="line">    baseurl = <span class="string">&quot;https://movie.douban.com/top250?start=&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#1 爬取网页</span></span><br><span class="line">    datalist  = getData(baseurl)</span><br><span class="line"></span><br><span class="line">   <span class="comment"># savepath = &quot;豆瓣电影.xls&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#3 保存数据</span></span><br><span class="line">    <span class="comment">#saveData(datalist,savepath)</span></span><br><span class="line"></span><br><span class="line">    dbPath = <span class="string">&quot;movie&quot;</span></span><br><span class="line"></span><br><span class="line">    saveDb(datalist,dbPath)</span><br><span class="line"></span><br><span class="line"><span class="comment">#影片详情链接的规则</span></span><br><span class="line">findLink = re.compile(r<span class="string">&#x27;&lt;a href=&quot;(.*?)&quot;&gt;&#x27;</span>)</span><br><span class="line"><span class="comment">#影片图片</span></span><br><span class="line">findImgSrc = re.compile(r<span class="string">&#x27;&lt;img.*src=&quot;(.*?)&quot;&#x27;</span>,re.S) <span class="comment">#re.S 让换行符包含在字符中</span></span><br><span class="line"><span class="comment">#影片片名</span></span><br><span class="line">findTitle = re.compile(r<span class="string">&#x27;&lt;span class=&quot;title&quot;&gt;(.*)&lt;/span&gt;&#x27;</span>)</span><br><span class="line"><span class="comment">#影片评分</span></span><br><span class="line">findRating = re.compile(r<span class="string">&#x27;&lt;span class=&quot;rating_num&quot; property=&quot;v:average&quot;&gt;(.*)&lt;/span&gt;&#x27;</span>)</span><br><span class="line"><span class="comment">#找到评价人数</span></span><br><span class="line">findJudge = re.compile(r<span class="string">&#x27;span&gt;(\d*)人评价&lt;/span&gt;&#x27;</span>)</span><br><span class="line"><span class="comment">#找到概识</span></span><br><span class="line">findInq  = re.compile(r<span class="string">&#x27;&lt;span class=&quot;inq&quot;&gt;(.*)&lt;/span&gt;&#x27;</span>)</span><br><span class="line"><span class="comment">#找到影片的相关内容</span></span><br><span class="line">findBD = re.compile(r<span class="string">&#x27;&lt;p class=&quot;&quot;&gt;(.*?) &lt;/p&gt;&#x27;</span>,re.S)</span><br><span class="line"></span><br><span class="line"><span class="comment">#爬取网页</span></span><br><span class="line">def getData(baseurl):</span><br><span class="line">    datalist = []</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i  <span class="keyword">in</span> range(0,10): <span class="comment">#调用获取页面信息的函数，10次</span></span><br><span class="line">        url = baseurl+str(i*25)</span><br><span class="line">        html = askURL(url)  <span class="comment">#保存获取到的网页源码</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 2 逐一解析数据</span></span><br><span class="line">        soup = BeautifulSoup(html,<span class="string">&quot;html.parser&quot;</span>)</span><br><span class="line">        <span class="keyword">for</span> item <span class="keyword">in</span> soup.find_all(<span class="string">&#x27;div&#x27;</span>,class_=<span class="string">&quot;item&quot;</span>): <span class="comment">#查找符合要求的字符串形成列表，多重并和查找</span></span><br><span class="line"></span><br><span class="line">           data = []   <span class="comment">#保存一部电影的所有信息</span></span><br><span class="line"></span><br><span class="line">           item = str(item)</span><br><span class="line"></span><br><span class="line">            <span class="comment">#影片详情链接</span></span><br><span class="line">           link = re.findall(findLink,item)[0]<span class="comment"># re库用来通过正则表达式查找指定的字符串</span></span><br><span class="line">           data.append(link)                                                                                     <span class="comment">#添加链接</span></span><br><span class="line"></span><br><span class="line">           imgSrc = re.findall(findImgSrc,item)[0]</span><br><span class="line">           data.append(imgSrc)                                                                                   <span class="comment">#添加图片</span></span><br><span class="line"></span><br><span class="line">           titles = re.findall(findTitle,item)</span><br><span class="line"></span><br><span class="line">           <span class="keyword">if</span> (len(titles) == 2) : <span class="comment">#因为它有可能没有英文标题</span></span><br><span class="line">               data.append(titles[0]) <span class="comment">#添加中文名</span></span><br><span class="line">               otitle = titles[1].replace(<span class="string">&#x27;/&#x27;</span>,<span class="string">&quot;&quot;</span>) <span class="comment">#去掉无关符号</span></span><br><span class="line">               data.append(otitle)</span><br><span class="line">           <span class="keyword">else</span>:</span><br><span class="line">               data.append(titles[0])                                                                             <span class="comment">#添加标题</span></span><br><span class="line">               data.append(<span class="string">&quot; &quot;</span>) <span class="comment"># 置空 因为在数据库中要占用一定的位置，</span></span><br><span class="line"></span><br><span class="line">           rating = re.findall(findRating,item)[0]</span><br><span class="line">           data.append(rating)                                                                                   <span class="comment">#添加评分</span></span><br><span class="line"></span><br><span class="line">           judgeNum = re.findall(findJudge,item)[0]</span><br><span class="line">           data.append(judgeNum)                                                                            <span class="comment">#添加评价人数</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">           inq = re.findall(findInq,item)</span><br><span class="line">           <span class="keyword">if</span> len(inq) != 0 :</span><br><span class="line">                inq = inq[0].replace(<span class="string">&quot;。&quot;</span>,<span class="string">&quot;&quot;</span>)  <span class="comment">#去掉句号</span></span><br><span class="line">                data.append(inq)               <span class="comment">#添加概述</span></span><br><span class="line">           <span class="keyword">else</span>:</span><br><span class="line">                data.append(<span class="string">&quot; &quot;</span>)         <span class="comment">#留空</span></span><br><span class="line"></span><br><span class="line">           bd = re.findall(findBD,item)[0]</span><br><span class="line">           bd = re.sub(<span class="string">&#x27;&lt;br(\s+)?/&gt;(\s+)?&#x27;</span>,<span class="string">&quot; &quot;</span>,bd)  <span class="comment">#去掉&lt;br/&gt;</span></span><br><span class="line">           bd = re.sub(<span class="string">&#x27;/&#x27;</span>,<span class="string">&quot; &quot;</span>,bd)     <span class="comment">#替换 /</span></span><br><span class="line">           data.append(bd.strip())   <span class="comment">#去掉前后的空格                                                      添加相关内容</span></span><br><span class="line"></span><br><span class="line">           datalist.append(data)           <span class="comment">#把处理好的一部电影信息放进datalist中</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">return</span>  datalist</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#得到指定一个URL的网页内容</span></span><br><span class="line">def askURL(url):</span><br><span class="line">    head = &#123;           <span class="comment">#模拟浏览器头部信息，向豆瓣服务器发送消息</span></span><br><span class="line">        <span class="string">&quot;user-agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36&quot;</span></span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#用户代理，告诉服务器，我们是什么类型的机器</span></span><br><span class="line">    req = urllib.request.Request(url,headers = head)</span><br><span class="line">    html = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">    try:</span><br><span class="line">        response = urllib.request.urlopen(req)</span><br><span class="line">        html = response.read().decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    except urllib.error.URLError as e:</span><br><span class="line">        <span class="keyword">if</span> hasattr(e,<span class="string">&#x27;code&#x27;</span>):<span class="comment"># 若该异常对象有此属性 则打印该异常对象的属性</span></span><br><span class="line">            <span class="built_in">print</span>(e.code)</span><br><span class="line">        <span class="keyword">if</span> hasattr(e,<span class="string">&#x27;reason&#x27;</span>):</span><br><span class="line">            <span class="built_in">print</span>(e.reason)</span><br><span class="line">    <span class="built_in">return</span> html</span><br><span class="line"></span><br><span class="line"><span class="comment">#保存数据到excel表中</span></span><br><span class="line">def saveData(datalist,savepath):</span><br><span class="line">    book = xlwt.Workbook(encoding=<span class="string">&quot;utf-8&quot;</span>,style_compression=0) <span class="comment"># 创建workbook对象</span></span><br><span class="line">    sheet = book.add_sheet(<span class="string">&quot;豆瓣电影Top250&quot;</span>,cell_overwrite_ok=True) <span class="comment"># 创建工作表</span></span><br><span class="line">    col = (<span class="string">&#x27;电影详情链接&#x27;</span>,<span class="string">&#x27;图片链接&#x27;</span>,<span class="string">&#x27;影片中文名&#x27;</span>,<span class="string">&#x27;影片外国名&#x27;</span>,<span class="string">&#x27;评分&#x27;</span>,<span class="string">&#x27;评价数&#x27;</span>,<span class="string">&#x27;概述&#x27;</span>,<span class="string">&#x27;相关信息&#x27;</span>) <span class="comment">#定义了一个元组</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(0,8):</span><br><span class="line">        sheet.write(0,i,col[i]) <span class="comment">#列名写入</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(0,250):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;第%d条&quot;</span>%i)</span><br><span class="line">        data = datalist[i]</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(0,8):</span><br><span class="line">            sheet.write(i+1,j,data[j])</span><br><span class="line"></span><br><span class="line">    book.save(savepath)  <span class="comment">#保存</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#保存数据到数据库中</span></span><br><span class="line">def saveDb(datalist,dbPath):</span><br><span class="line"></span><br><span class="line">    init_db(dbPath)</span><br><span class="line">    coon   =  sqlite3.connect(dbPath)</span><br><span class="line">    cursor =  coon.cursor()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> data <span class="keyword">in</span> datalist:</span><br><span class="line">        <span class="keyword">for</span> index <span class="keyword">in</span> range(len(data)):</span><br><span class="line">            <span class="keyword">if</span> index==4 or index ==5 :</span><br><span class="line">                <span class="built_in">continue</span></span><br><span class="line">            data[index] = <span class="string">&#x27;&quot;&#x27;</span> + data[index]+<span class="string">&#x27;&quot;&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        sql = <span class="string">&#x27;&#x27;</span><span class="string">&#x27; insert into movie250(info_link,pic_link,cname,ename,score,rated ,instroduction ,info)values (%s)&#x27;</span><span class="string">&#x27;&#x27;</span>%<span class="string">&quot;,&quot;</span>.join(data)</span><br><span class="line">        cursor.execute(sql)</span><br><span class="line">        coon.commit()</span><br><span class="line">    coon.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#初始化一个数据库</span></span><br><span class="line">def init_db(dbpath):</span><br><span class="line"></span><br><span class="line">    <span class="comment">#创建表时 前面是表示字段的变量名，后面是字段的类型</span></span><br><span class="line">    sql=<span class="string">&#x27;&#x27;</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">     create table movie250(</span></span><br><span class="line"><span class="string">     id             integer primary key autoincrement,</span></span><br><span class="line"><span class="string">     info_link      text,</span></span><br><span class="line"><span class="string">     pic_link       text,</span></span><br><span class="line"><span class="string">     cname          varchar ,</span></span><br><span class="line"><span class="string">     ename          varchar ,</span></span><br><span class="line"><span class="string">     score          numeric ,</span></span><br><span class="line"><span class="string">     rated          numeric ,</span></span><br><span class="line"><span class="string">     instroduction  text,</span></span><br><span class="line"><span class="string">     info text </span></span><br><span class="line"><span class="string">     )  </span></span><br><span class="line"><span class="string">    &#x27;</span><span class="string">&#x27;&#x27;</span></span><br><span class="line">    coon = sqlite3.connect(dbpath)</span><br><span class="line">    cursor = coon.cursor()</span><br><span class="line">    cursor.execute(sql)</span><br><span class="line">    coon.commit()</span><br><span class="line">    coon.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>: <span class="comment">#当程序执行时</span></span><br><span class="line">    main()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Flask"><a href="#Flask" class="headerlink" title="Flask"></a>Flask</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">from flask import Flask ,render_template</span><br><span class="line">import sqlite3</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@app.route(<span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">def index():</span><br><span class="line">    <span class="built_in">return</span>  render_template(<span class="string">&quot;index.html&quot;</span>)</span><br><span class="line"></span><br><span class="line">@app.route(<span class="string">&#x27;/index&#x27;</span>)</span><br><span class="line">def home():</span><br><span class="line">    <span class="built_in">return</span>  render_template(<span class="string">&quot;index.html&quot;</span>)</span><br><span class="line"></span><br><span class="line">@app.route(<span class="string">&#x27;/movie&#x27;</span>)</span><br><span class="line">def movie():</span><br><span class="line"></span><br><span class="line">    datalist = []</span><br><span class="line">    coon = sqlite3.connect(<span class="string">&#x27;movie&#x27;</span>)</span><br><span class="line">    cursor = coon.cursor()</span><br><span class="line">    sql = <span class="string">&#x27;&#x27;</span><span class="string">&#x27;select * from movie250 &#x27;</span><span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 要把数据保存在本地才行,关闭数据库，查询的数据会自己消失,即data变量存储的数据会自动消失</span></span><br><span class="line">    data = cursor.execute(sql)</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> data:</span><br><span class="line">        datalist.append(item)</span><br><span class="line">    cursor.close()</span><br><span class="line">    coon.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">return</span>  render_template(<span class="string">&quot;movie.html&quot;</span>,movies = datalist)</span><br><span class="line"></span><br><span class="line">@app.route(<span class="string">&#x27;/score&#x27;</span>)</span><br><span class="line">def score():</span><br><span class="line">    score = []  <span class="comment">#评分</span></span><br><span class="line">    num = []    <span class="comment">#每个评分所统计出来的电影数量</span></span><br><span class="line">    coon = sqlite3.connect(<span class="string">&#x27;movie&#x27;</span>)</span><br><span class="line">    cursor = coon.cursor()</span><br><span class="line">    sql = <span class="string">&#x27;&#x27;</span><span class="string">&#x27;select score,count(score ) from movie250  group by score &#x27;</span><span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 要把数据保存在本地才行,关闭数据库，查询的数据会自己消失,即data变量存储的数据会自动消失</span></span><br><span class="line">    data = cursor.execute(sql)</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> data:</span><br><span class="line">         score.append(item[0])</span><br><span class="line">         num.append(item[1])</span><br><span class="line">    cursor.close()</span><br><span class="line">    coon.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">return</span>  render_template(<span class="string">&quot;score.html&quot;</span>,score=score,num=num)</span><br><span class="line"></span><br><span class="line">@app.route(<span class="string">&#x27;/word&#x27;</span>)</span><br><span class="line">def word():</span><br><span class="line">    <span class="built_in">return</span>  render_template(<span class="string">&quot;word.html&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@app.route(<span class="string">&#x27;/team&#x27;</span>)</span><br><span class="line">def team():</span><br><span class="line"></span><br><span class="line">    <span class="built_in">return</span>  render_template(<span class="string">&quot;team.html&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="wordcloud"><a href="#wordcloud" class="headerlink" title="wordcloud"></a>wordcloud</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"> import jieba                            <span class="comment">#分词</span></span><br><span class="line">from matplotlib import  pyplot as plt   <span class="comment">#绘图，数据可视化</span></span><br><span class="line">from wordcloud import  WordCloud        <span class="comment">#词云</span></span><br><span class="line"></span><br><span class="line">from PIL import Image                   <span class="comment">#图片处理</span></span><br><span class="line">import numpy as np                      <span class="comment">#矩阵运算</span></span><br><span class="line">import sqlite3                          <span class="comment">#数据库</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">con = sqlite3.connect(<span class="string">&quot;movie&quot;</span>)</span><br><span class="line">cur = con.cursor()</span><br><span class="line">sql = <span class="string">&quot;select instroduction from movie250&quot;</span></span><br><span class="line">data = cur.execute(sql)</span><br><span class="line">text = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> data:</span><br><span class="line">    text = text + item[0]</span><br><span class="line"></span><br><span class="line"><span class="comment">#分词</span></span><br><span class="line">cut = jieba.cut(text)</span><br><span class="line">string = <span class="string">&quot; &quot;</span>.join(cut)</span><br><span class="line"></span><br><span class="line">img = Image.open(<span class="string">&quot;static/assets/img/tree.jpg&quot;</span>)  <span class="comment">#打开遮罩图片</span></span><br><span class="line"></span><br><span class="line">img_array = np.array(img) <span class="comment">#将图片转换为数组</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#创建一个词云对象</span></span><br><span class="line">wc = WordCloud(</span><br><span class="line">    background_color=<span class="string">&#x27;white&#x27;</span>,</span><br><span class="line"></span><br><span class="line">    mask = img_array,</span><br><span class="line">    font_path = <span class="string">&quot;‪C:\Windows\Fonts\msyh.ttc&quot;</span></span><br><span class="line"></span><br><span class="line">)</span><br><span class="line">wc.generate_from_text(string) <span class="comment">#从某个分好词的文本，生成一个新的wc</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#绘制图片</span></span><br><span class="line">fig = plt.figure(1)</span><br><span class="line">plt.imshow(wc)</span><br><span class="line"></span><br><span class="line">plt.axis(<span class="string">&quot;off&quot;</span>) <span class="comment">#是否显示坐标轴</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#plt.show()</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#输出词云图片到文件</span></span><br><span class="line"><span class="comment">#dpi 为设置清晰度</span></span><br><span class="line">plt.savefig(<span class="string">&quot;static/assets/img/word.jpg&quot;</span>)</span><br><span class="line"> </span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;##技术概括及主要代码&lt;/p&gt;
&lt;p&gt;###技术步骤&lt;br&gt;一、通过 urllib.request 模块进行网页的爬取。二、bs4中的BeautifulSoup 进行网页的解析。&lt;br&gt;三、通过re正则模块网页中相应的内容并提取。四、通过xlwt模块先将数据存储到excel</summary>
      
    
    
    
    <category term="Py爬虫" scheme="http://hjl.cool/categories/Py%E7%88%AC%E8%99%AB/"/>
    
    
    <category term="Py爬虫" scheme="http://hjl.cool/tags/Py%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>如何启动一个博客</title>
    <link href="http://hjl.cool/2021/01/19/hello-world/"/>
    <id>http://hjl.cool/2021/01/19/hello-world/</id>
    <published>2021-01-19T03:06:43.613Z</published>
    <updated>2021-01-26T03:33:57.223Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    <summary type="html">这是我的第一篇文章哦</summary>
    
    
    
    <category term="hexo" scheme="http://hjl.cool/categories/hexo/"/>
    
    
  </entry>
  
</feed>
